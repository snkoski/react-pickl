{"version":3,"sources":["components/Comment/CommentHolder.module.css","components/Game/GamePage.module.css","components/Vote/VoteButton.module.css","containers/TeamContainer.module.css","components/Game/GameCard.module.css","containers/GameContainer.module.css","actions/types.js","reducers/votesReducer.js","reducers/teamsReducer.js","reducers/gamesReducer.js","reducers/commentsReducer.js","reducers/auth.js","reducers/numVotesReducer.js","reducers/rootReducer.js","reducers/userReducer.js","serviceWorker.js","actions/user.js","actions/vote.js","components/Nav/Navbar.jsx","components/Comment/Comment.js","components/Comment/CommentHolder.js","components/Comment/CommentInput.js","actions/comments.js","containers/CommentContainer.js","components/Game/GamePage.jsx","components/Vote/VoteButton.jsx","actions/numVotes.js","components/Team/TeamCard.jsx","containers/TeamContainer.jsx","components/Game/GameCard.jsx","containers/GameContainer.jsx","actions/teams.js","actions/games.js","components/Auth/AuthFunctions.js","components/forms/Login.jsx","components/forms/Register.jsx","actions/auth.js","components/Auth/Logout/Logout.js","App.js","components/Nav/NavItems.js","components/Nav/AntNav.js","components/UI/Spinner/Spinner.js","components/Auth/AuthLogin.js","components/Auth/AuthRegister.js","App2.js","index.js","store.js","components/forms/Register.module.css","components/Comment/Comment.module.css","components/Team/TeamCard.module.css","components/Auth/AuthLogin.module.css","components/Auth/AuthRegister.module.css","components/Nav/AntNav.module.css","components/Nav/Nav.module.css","components/UI/Spinner/Spinner.module.css"],"names":["module","exports","CommentHolder","GamePage","ButtonDisabled","ButtonEnabledNo","ButtonEnabledYes","ButtonEnabledUndecided","TeamContainer","GameCard","GameContainer","USER_REAUTH_SUCCESS","REMOVE_USER","initialState","votes","error","loading","votesReducer","state","arguments","length","undefined","action","type","Object","objectSpread","votesFetchStart","votesFetchSuccess","votesFetchFail","removeVotes","newVoteState","filter","vote","game","concat","addVote","id","editVote","teams","teamsReducer","fetchTeamsStart","fetchTeamsSuccess","fetchTeamsFail","allGames","selectedGame","gamesReducer","gamesFetchStart","gamesFetchSuccess","gamesFetchFail","foundGame","selectGame","comments","commentsReducer","fetchGameCommentsStart","fetchGameCommentsSuccess","fetchGameCommentsFail","comment","addGameComment","newCommentsState","sort","a","b","timestamp","toConsumableArray","editGameComment","token","userId","username","authReducer","authStart","authSuccess","authFail","authLogout","numVotes","numVotesReducer","numVotesFetchStart","numVotesFetchSuccess","numVotesFetchFail","filteredNumVotes","numVote","team_id","team","find","num_votes","newstate","console","log","addNumVote","game_id","editNumVote","combineReducers","user","localStorage","removeItem","games","auth","Boolean","window","location","hostname","match","userFetchData","dispatch","axios","get","headers","Authorization","then","resp","data","fetchVotes","getItem","catch","err","Navbar","handleLogout","_this","props","removeUser","react_default","createElement","className","classes","nav","logo","react_router_dom","to","onClick","this","Component","connect","deleteButton","commentor","handleDeleteComment","days","split","Comment","time","year","month","parseInt","day","hour","minute","second","Date","toLocaleString","formatTimestamp","content","map","components_Comment_Comment","key","CommentInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","name","value","onSubmit","preventDefault","addComment","noValidate","placeholder","post","user_id","postGameComment","CommentContainer","deleteComment","renderCommentInput","Comment_CommentInput","getComments","Comment_CommentHolder","fetchGameComments","patch","patchDeleteGameComment","backButton","history","push","_this$props$location$","homeTeam","awayTeam","containers_CommentContainer","VoteButton","handleClick","gameID","votedAlready","editNum","addNum","voteButtonTeam","_this2","_this$props","teamID","votedOn","style","postVote","TeamCard","v","City","city","Name","BlackAndWhite","src","alt","Vote_VoteButton","currentVote","prevProps","awayVotes","homeVotes","Team_TeamCard","React","containers_TeamContainer","currentUser","splitTime","dd","join","formatTime","pathname","getTeams","getTodaysGames","getNumVotes","getVotes","authUser","away_team","home_team","Game_GameCard","register","newUser","email","password","setItem","login","Login","addUserAction","RegisterContainer","RegisterForm","Header","htmlFor","Register","confirmPassword","logout","Logout","onLogout","react_router","App","Nav_Navbar","onLogin","handleLogin","path","render","routeProps","forms_Login","assign","forms_Register","Game_GamePage","containers_GameContainer","navItems","menu","theme","mode","defaultSelectedKeys","lineHeight","isAuthenticated","Item","antNav","AntNav","NavItems","spinner","LoaderContainer","Loader","AuthLogin","submitHandler","event","errorMessage","message","authRedirect","Spinner","AuthLoginContainer","AuthLoginForm","loginData","AuthRegister","onRegister","AuthRegisterContainer","AuthRegisterForm","registerData","App2","onTryAutoSignup","component","ReactDOM","es","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","basename","src_App2","document","getElementById","navigator","serviceWorker","ready","registration","unregister","load6","round"],"mappings":"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","file":"static/js/main.4fe8b546.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CommentHolder\":\"CommentHolder_CommentHolder__12fgP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GamePage\":\"GamePage_GamePage__3GO1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonDisabled\":\"VoteButton_ButtonDisabled__3zo3w\",\"ButtonEnabledNo\":\"VoteButton_ButtonEnabledNo__3tbHH\",\"ButtonEnabledYes\":\"VoteButton_ButtonEnabledYes__3pbjf\",\"ButtonEnabledUndecided\":\"VoteButton_ButtonEnabledUndecided__10duU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TeamContainer\":\"TeamContainer_TeamContainer__2rYoa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameCard\":\"GameCard_GameCard__1WhX-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameContainer\":\"GameContainer_GameContainer__24hD_\"};","export const USER_REAUTH = 'USER_REAUTH';\nexport const USER_REAUTH_SUCCESS = 'USER_REAUTH_SUCCESS';\nexport const REMOVE_USER = 'REMOVE_USER';\n\nexport const FETCH_VOTES_START = 'FETCH_VOTES_START';\nexport const FETCH_VOTES_SUCCESS = 'FETCH_VOTES_SUCCESS';\nexport const FETCH_VOTES_FAILURE = 'FETCH_VOTES_FAILURE';\nexport const REMOVE_VOTES = 'REMOVE_VOTES';\nexport const EDIT_VOTE = 'EDIT_VOTE';\nexport const NEW_VOTE = 'NEW_VOTE';\n\nexport const FETCH_TEAMS_START = 'FETCH_TEAMS';\nexport const FETCH_TEAMS_SUCCESS = 'FETCH_TEAMS_SUCCESS';\nexport const FETCH_TEAMS_FAILURE = 'FETCH_TEAMS_FAILURE';\n\nexport const FETCH_GAMES_START = 'FETCH_GAMES_START';\nexport const FETCH_GAMES_SUCCESS = 'FETCH_GAMES_SUCCESS';\nexport const FETCH_GAMES_FAILURE = 'FETCH_GAMES_FAILURE';\nexport const SELECT_GAME = 'SELECT_GAME';\n\n\nexport const FETCH_GAME_COMMENTS_START = 'FETCH_GAME_COMMENTS_START';\nexport const FETCH_GAME_COMMENTS_SUCCESS = 'FETCH_GAME_COMMENTS_SUCCESS';\nexport const FETCH_GAME_COMMENTS_FAILURE = 'FETCH_GAME_COMMENTS_FAILURE';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const DELETE_GAME_COMMENT = 'DELETE_GAME_COMMENT';\nexport const EDIT_GAME_COMMENT = 'EDIT_GAME_COMMENT';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_FAILURE = 'AUTH_FAILURE';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const FETCH_NUM_VOTES_START  = 'FETCH_NUM_VOTES_START';\nexport const FETCH_NUM_VOTES_SUCCESS = 'FETCH_NUM_VOTES_SUCCESS';\nexport const FETCH_NUM_VOTES_FAILURE  = 'FETCH_NUM_VOTES_FAILURE';\nexport const ADD_NUM_VOTE = 'ADD_NUM_VOTE';\nexport const EDIT_NUM_VOTE = 'EDIT_NUM_VOTE';","import { FETCH_VOTES_START, FETCH_VOTES_SUCCESS, FETCH_VOTES_FAILURE,  REMOVE_VOTES, NEW_VOTE, EDIT_VOTE } from '../actions/types';\n\nconst initialState = {\n    votes: [],\n    error: null,\n    loading: false\n};\n\nconst votesFetchStart = (state, action) => {\n    return { ...state, error: null, loading: true };\n};\n\nconst votesFetchSuccess = (state, action) => {\n    return { ...state, votes: action.votes, error: null, loading: false };\n};\n\nconst votesFetchFail = (state, action) => {\n    return { ...state, error: action.error, loading: false };\n};\n\nconst addVote = (state, action) => {\n    let newVoteState = state.votes.filter(vote => {\n        return vote.game !== action.vote.game\n    })\n\n    return { ...state, votes: newVoteState.concat(action.vote) };\n};\n\nconst editVote = (state, action) => {\n    let newVoteState = state.votes.filter(vote => {\n        return vote.id !== action.vote.id;\n    })\n    // newVoteState = newVoteState.concat(action.vote);\n    return { ...state, votes: newVoteState.concat(action.vote)}\n};\n\nconst removeVotes = (state, action) => {\n    return { ... state, votes: [] };\n};\n\nconst votesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_VOTES_START: return votesFetchStart(state, action);\n        case FETCH_VOTES_SUCCESS: return votesFetchSuccess(state, action);\n        case FETCH_VOTES_FAILURE: return votesFetchFail(state, action);\n        case REMOVE_VOTES: return removeVotes(state, action);\n        case NEW_VOTE: return addVote(state, action);\n        case EDIT_VOTE: return editVote(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default votesReducer","import { FETCH_TEAMS_START, FETCH_TEAMS_SUCCESS, FETCH_TEAMS_FAILURE } from \"../actions/types\";\n\nconst initialState = {\n    teams: null,\n    error: null,\n    loading: false\n}\n\nconst fetchTeamsStart = (state, action) => {\n    return { ...state, error: null, loading: true };\n};\n\nconst fetchTeamsSuccess = (state, action) => {\n    return { ...state, teams: action.teams, error: null, loading: false };\n};\n\nconst fetchTeamsFail = (state, action) => {\n    return { ...state, error: action.error, loading: false };\n};\n\nconst teamsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_TEAMS_START: return fetchTeamsStart(state, action);\n        case FETCH_TEAMS_SUCCESS: return fetchTeamsSuccess(state, action);\n        case FETCH_TEAMS_FAILURE: return fetchTeamsFail(state, action);\n        default:\n            return state;\n    }\n} \n\nexport default teamsReducer;","import { FETCH_GAMES_START, FETCH_GAMES_SUCCESS, FETCH_GAMES_FAILURE, SELECT_GAME } from \"../actions/types\";\n\nconst initialState = {\n    allGames: null,\n    selectedGame: null,\n    error: null,\n    loading: false\n};\n\nconst gamesFetchStart = (state, action) => {\n    return { ...state, error: null, loading: true };\n};\n\nconst gamesFetchSuccess = (state, action) => {\n    return { ...state, allGames: action.allGames, error: null, loading: false };\n};\n\nconst gamesFetchFail = (state, action) => {\n    return { ...state, error: action.error, loading: false };\n};\n\nconst selectGame = (state, action) => {\n    const foundGame = state.allGames.filter(game => {\n        return game.id === action.id;\n    })\n    return { ...state, selectedGame: foundGame };\n};\n\nconst gamesReducer =(state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_GAMES_START: return gamesFetchStart(state, action);\n        case FETCH_GAMES_SUCCESS: return gamesFetchSuccess(state, action);\n        case FETCH_GAMES_FAILURE: return gamesFetchFail(state, action);\n        case SELECT_GAME: return selectGame(state, action);\n        default:\n            return state;\n    };\n};\n\nexport default gamesReducer;","import { FETCH_GAME_COMMENTS_START, FETCH_GAME_COMMENTS_SUCCESS, FETCH_GAME_COMMENTS_FAILURE, ADD_COMMENT, DELETE_GAME_COMMENT, EDIT_GAME_COMMENT } from \"../actions/types\";\n\nconst initialState = {\n    comments: [],\n    error: false,\n    loading: false\n}\n\nconst fetchGameCommentsStart = (state, action) => {\n    return { ...state, error: null, loading: true };\n};\n\nconst fetchGameCommentsSuccess = (state, action) => {\n    return { ...state, comments: action.comments, error: null, loading: false };\n};\n\nconst fetchGameCommentsFail = (state, action) => {\n    return { ...state, error: action.error, loading: false };\n};\n\nconst addGameComment = (state, action) => {\n    return { ...state, comments: state.comments.concat(action.comment) };\n};\n\nconst deleteGameComment = (state, action) => {\n    let newCommentsState = state.comments.filter(comment => {\n        return comment.id != action.comment.id;\n    })\n    newCommentsState = newCommentsState.concat(action.comment);\n    newCommentsState = newCommentsState.sort((a, b) => {\n        return (a.timestamp > b.timestamp) ? 1 : -1;\n    })\n    return { ...state, comments: [...newCommentsState] };\n};\n\nconst editGameComment = (state, action) => {\n    let newCommentsState = state.comments.filter(comment => {\n        return comment.id != action.comment.id;\n    })\n    newCommentsState = newCommentsState.concat(action.comment);\n    newCommentsState = newCommentsState.sort((a, b) => {\n        return (a.timestamp > b.timestamp) ? 1 : -1;\n    })\n    return { ...state, comments: [...newCommentsState] };\n};\n\nconst commentsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_GAME_COMMENTS_START: return fetchGameCommentsStart(state, action);\n        case FETCH_GAME_COMMENTS_SUCCESS: return fetchGameCommentsSuccess(state, action);\n        case FETCH_GAME_COMMENTS_FAILURE: return fetchGameCommentsFail(state, action);\n        case ADD_COMMENT: return addGameComment(state, action);\n        case DELETE_GAME_COMMENT: return deleteGameComment(state, action);\n        case EDIT_GAME_COMMENT: return editGameComment(state, action);\n        default:\n            return state;\n    };\n}; \n\nexport default commentsReducer;","import * as actionTypes from '../actions/types';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    username: null,\n    error: null, \n    loading: false\n};\n\nconst authStart = (state, action) => {\n    return { ...state, error: null, loading: true };\n};\n\nconst authSuccess = (state, action) => {\n    return { ...state, token: action.token, userId: action.userId, username: action.username, error: null, loading: false };\n};\n\nconst authFail = (state, action) => {\n    return { ...state, error: action.error, loading: false };\n};\n\nconst authLogout = (state, action) => {\n    return { ...state, token: null, userId: null, username: null };\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAILURE: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        default:\n            return state;\n    };\n};\n\nexport default authReducer;","import { FETCH_NUM_VOTES_START, FETCH_NUM_VOTES_SUCCESS, FETCH_NUM_VOTES_FAILURE, ADD_NUM_VOTE, EDIT_NUM_VOTE } from '../actions/types';\n\nconst initialState = {\n    numVotes: [],\n    error: null,\n    loading: false\n};\n\nconst numVotesFetchStart = (state, action) => {\n    return { ...state, error: null, loading: true };\n};\n\nconst numVotesFetchSuccess = (state, action) => {\n    return { ...state, numVotes: action.numVotes, error: null, loading: false };\n};\n\nconst numVotesFetchFail = (state, action) => {\n    return { ...state, error: action.error, loading: false };\n};\n\nconst addNumVote = (state, action) => {\n    let filteredNumVotes = state.numVotes.filter(numVote => numVote.team_id !== action.vote.team)\n    let team = state.numVotes.find(numVote => numVote.team_id === action.vote.team)\n    team.num_votes++\n    let newstate = filteredNumVotes.concat(team)\n    console.log(\"ADD NUM VOTE FILTERED: \", filteredNumVotes)\n    console.log(\"ADD NUM VOTE TEAM: \", team)\n    console.log(\"ADD NUM VOTE NEWSTATE: \", newstate)\n    return { ...state, numVotes: [...filteredNumVotes.concat(team)] }\n}\n\nconst editNumVote = (state, action) => {\n    let filteredNumVotes = state.numVotes.filter(numVote => numVote.game_id !== action.vote.game)\n    let teams = state.numVotes.filter(numVote => numVote.game_id === action.vote.game)\n    if (teams[0].team_id === action.vote.team) {\n        teams[0].num_votes++\n        teams[1].num_votes--\n    } else if (teams[1].team_id === action.vote.team) {\n        teams[0].num_votes--\n        teams[1].num_votes++\n    }\n\n    console.log(\"NUM VOTE REDUCER\", filteredNumVotes.concat(teams))\n    return { ...state, numVotes: [...filteredNumVotes.concat(teams)] }\n};\n\nconst numVotesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_NUM_VOTES_START: return numVotesFetchStart(state, action);\n        case FETCH_NUM_VOTES_SUCCESS: return numVotesFetchSuccess(state, action);\n        case FETCH_NUM_VOTES_FAILURE: return numVotesFetchFail(state, action);\n        case ADD_NUM_VOTE: return addNumVote(state, action);\n        case EDIT_NUM_VOTE: return editNumVote(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default numVotesReducer","import { combineReducers } from 'redux';\nimport { user } from './userReducer';\nimport votesReducer from './votesReducer';\nimport teamsReducer from './teamsReducer';\nimport gamesReducer from './gamesReducer';\nimport commentsReducer from './commentsReducer';\nimport authReducer from './auth';\nimport numVotesReducer from './numVotesReducer';\nexport default combineReducers({\n    user,\n    votes: votesReducer,\n    teams: teamsReducer,\n    games: gamesReducer,\n    comments: commentsReducer,\n    auth: authReducer,\n    numVotes: numVotesReducer\n})","import { USER_REAUTH, USER_REAUTH_SUCCESS, REMOVE_USER } from '../actions/types';\n\nexport function user(state = {}, action) {\n\n    switch (action.type) {\n        case USER_REAUTH_SUCCESS :\n            let user = action.user\n            return user;\n        case REMOVE_USER :\n            localStorage.removeItem('token')\n            return {};\n        default:\n            return state;\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { USER_REAUTH, USER_REAUTH_SUCCESS, REMOVE_USER } from './types';\nimport axios from 'axios';\n\nexport const userFetchReauthSuccess = (user) => {\n    return {\n        type: USER_REAUTH_SUCCESS,\n         user: user\n    };\n};\n\nexport const userFetchData = (token) => {\n    return dispatch => {\n        axios.get('http://54.225.49.92/reauth', {\n                headers: { 'Authorization': 'Bearer ' + token }\n            })\n            .then(resp => dispatch(userFetchReauthSuccess(resp.data.user)))\n    };\n};\n\nexport const removeUser = () => {\n    return {\n        type: REMOVE_USER\n    };\n};\n","import { FETCH_VOTES_START, FETCH_VOTES_SUCCESS, FETCH_VOTES_FAILURE, REMOVE_VOTES, NEW_VOTE, EDIT_VOTE } from './types';\nimport axios from 'axios';\n\nexport const fetchVotesStart = () => {\n    return {\n        type: FETCH_VOTES_START\n    };\n};\n\nexport const fetchVotesSuccess = (votes) => {\n    return {\n        type: FETCH_VOTES_SUCCESS, \n        votes: votes\n    };\n};\n\nexport const fetchVotesFailure = (error) => {\n    return {\n        type: FETCH_VOTES_FAILURE,\n        error: error\n    };\n};\n\nexport const fetchVotes = (id) => {\n    return dispatch => {\n        dispatch(fetchVotesStart());\n        console.log(\"FETCH VOTE START\", id)\n        axios.get(`http://54.225.49.92/votes/${id}/today`, {\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\n        })\n        .then(resp => dispatch(fetchVotesSuccess(resp.data.votes)))\n        .catch(err => dispatch(fetchVotesFailure(err)))\n    };\n};\n\nexport const removeVotes = () => {\n    return {\n        type: REMOVE_VOTES\n    };\n};\n\nexport const newVote = (vote) => {\n    return {\n        type: NEW_VOTE,\n        vote: vote\n    };\n};\n\nexport const editVote = (vote) => {\n    return {\n        type: EDIT_VOTE,\n        vote: vote\n    };\n};\n\nexport const postVote = (vote) => {\n    console.log(\"BEFORE VOTE POST: \", vote)\n    return dispatch => {\n        axios.post('http://54.225.49.92/votes', {\n            user_id: vote.user,\n            game_id: vote.game,\n            team_id: vote.team\n        }, {\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\n        })\n        .then(resp => {\n            console.log(\"VOTE POST RESPONSE\", resp)\n            dispatch(newVote(resp.data.vote))})\n        .catch(err => console.log(\"VOTE POST ERROR: \", err))\n    };\n};\n","import React , { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { removeUser } from '../../actions/user';\nimport { removeVotes } from '../../actions/vote';\n\nimport classes from './Nav.module.css';\n\nclass Navbar extends Component {\n\n    handleLogout = () => {\n        this.props.removeUser()\n        this.props.removeVotes()\n    }\n\n    render() {\n        return (\n            <div className={classes.nav}>\n                <h1 className={classes.logo}>Pickl</h1>\n                <h1><Link to='/login'>Login</Link></h1>\n                <h1><Link to='/register'>Register</Link></h1>\n                <h1 onClick={this.handleLogout}><Link to='/'><button >Logout</button></Link></h1>\n                \n            </div>\n            )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        votes: state.votes\n    }\n}\n\nexport default connect(mapStateToProps, { removeUser, removeVotes })(Navbar)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { patchDeleteComment } from '../../actions/comments';\n\nimport classes from './Comment.module.css';\n\nconst formatTimestamp = timestamp => {\n    let days = timestamp.split('T')[0];\n    let time = timestamp.split('T')[1];\n    let year = days.split('-')[0];\n    let month = parseInt(days.split('-')[1]) - 1;\n    let day = days.split('-')[2];\n    let hour = time.split(':')[0];\n    let minute = time.split(':')[1];\n    let second = time.split(':')[2].split('+')[0]\n    let newDate = new Date ( year, month, day, hour, minute, second )\n    \n    return newDate.toLocaleString()\n}\n\nconst Comment = props => {\n    \n    let deleteButton = null;\n    if (props.username === props.comment.commentor.username) {\n        deleteButton = <button type='button' onClick={() => props.handleDeleteComment(props.comment.id)}>Delete</button>\n    }\n    let days = props.comment.timestamp.split('T')[0];\n\n    console.log(\"DAYS\", days)\n    return (\n        <div className={classes.Comment}>\n            <span className={classes.commentor}>{props.comment.commentor.username}</span>\n            <span className={classes.timestamp}>{formatTimestamp(props.comment.timestamp)}</span>\n            <span className={classes.content}>{props.comment.content}</span>\n            {deleteButton}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        username: state.auth.username\n    }\n}\n\nexport default connect(mapStateToProps)(Comment);","import React from 'react';\nimport Comment from './Comment';\n\nimport classes from './CommentHolder.module.css';\n\nconst CommentHolder = props => {\n        if (props.comments) {\n            return (\n                <div className={classes.CommentHolder}>\n                    {props.comments.map(comment => {\n                        return <Comment key={`comment-${comment.id}`} comment={comment} username={props.username} handleDeleteComment={props.handleDeleteComment}/>\n                    })}\n                </div>\n            )\n        } else {\n            return null;\n        }\n\n}\nexport default CommentHolder;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { postGameComment } from '../../actions/comments';\n\nclass CommentInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: ''\n        };\n    }\n\n    onChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit = e => {\n        e.preventDefault()\n        const comment = {\n            user: this.props.user.userId, \n            game: this.props.game_id, \n            content: this.state.content\n        }\n        this.props.addComment(comment)\n    }\n\n    render() {\n        return (\n            <div>\n                <form noValidate onSubmit={this.onSubmit}>\n                    <input type='text'\n                        name='content'\n                        placeholder='Enter comment'\n                        value={this.state.content}\n                        onChange={this.onChange}>\n                    </input>\n                    <button type='submit'>Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.auth,\n        comments: state.comments\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addComment: (comment) => dispatch(postGameComment(comment))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentInput);","\n import { FETCH_GAME_COMMENTS_START, FETCH_GAME_COMMENTS_SUCCESS, FETCH_GAME_COMMENTS_FAILURE, ADD_COMMENT, DELETE_GAME_COMMENT, EDIT_GAME_COMMENT } from './types';\n import axios from 'axios';\n\n export const fetchGameCommentsStart = () => {\n     return {\n         type: FETCH_GAME_COMMENTS_START\n     };\n };\n\n export const fetchGameCommentsSuccess = (comments) => {\n    return {\n        type: FETCH_GAME_COMMENTS_SUCCESS,\n        comments: comments\n    };\n};\n\n export const fetchGameCommentsFailure = (error) => {\n    return {\n        type: FETCH_GAME_COMMENTS_FAILURE,\n        error: error\n    };\n };\n\n export const fetchGameComments = (id) => {\n     return dispatch => {\n         dispatch(fetchGameCommentsStart());\n\n         axios.get(`http://54.225.49.92/comments/games/${id}`)\n         .then(resp => dispatch(fetchGameCommentsSuccess(resp.data.comments)))\n         .catch(err => dispatch(fetchGameCommentsFailure(err)))\n     };\n };\n\n export const addGameComment = (comment) => {\n     return {\n        type: ADD_COMMENT,\n        comment: comment\n     };\n };\n export const postGameComment = (comment) => {\n     console.log(\"POST\", comment)\n    return dispatch => {\n        axios.post('http://54.225.49.92/comments', {\n            user_id: comment.user,\n            game_id: comment.game,\n            content: comment.content\n        }, {\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\n        })\n        .then(resp => {\n            console.log(resp);\n            dispatch(addGameComment(resp.data.comment))})\n        .catch(err => console.log(\"GAME POST ERROR\", err))\n    };\n };\n\n export const deleteGameComment = (comment) => {\n     return {\n         type: DELETE_GAME_COMMENT,\n         comment: comment\n     };\n };\n\n export const patchDeleteGameComment = (id) => {\n    return dispatch => {\n        axios.patch(`http://54.225.49.92/comments/delete/${id}`, {}, {\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\n        })\n        .then(resp => {\n            console.log(\"PATCH DELETe\", resp)\n            dispatch(deleteGameComment(resp.data.comment))})\n        .catch(err => console.log(\"DELETE GAME COMMENT ERROR\", err))\n    };\n};\n\nexport const editGameComment = (comment) => {\n    return {\n        type: EDIT_GAME_COMMENT,\n        comment: comment\n    };\n};\n\nexport const patchEditGameComment = (id, comment) => {\n    return dispatch => {\n        axios.patch(`http://54.225.49.92/comments/edit/${id}`, {\n            content: comment.content,\n            user_id: comment.user_id,\n            game_id: comment.game_id\n        }, {\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\n        })\n        .then(resp => dispatch(editGameComment(resp.data.comment)))\n        .catch(err => console.log(\"EDIT GAME COMMENT ERROR\", err))\n    };\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport CommentHolder from '../components/Comment/CommentHolder';\nimport CommentInput from '../components/Comment/CommentInput';\nimport { fetchGameComments, patchDeleteGameComment } from '../actions/comments';\n\n\nclass CommentContainer extends Component {\n\n    componentDidMount() {\n        this.props.getComments(this.props.game_id)\n    }\n\n    handleDeleteComment = id => {\n        this.props.deleteComment(id)\n    }\n\n    renderCommentInput = () => {\n        return (this.props.user.userId) ? <CommentInput game_id={this.props.game_id}/> : null;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderCommentInput()}\n                <CommentHolder comments={this.props.comments} username={this.props.user.username} handleDeleteComment={this.handleDeleteComment}/>\n            </div>\n        )\n    }\n};\nconst mapStateToProps = state => {\n    return {\n        comments: state.comments.comments,\n        user: state.auth\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getComments: (id) => dispatch(fetchGameComments(id)), \n        deleteComment: (id) => dispatch(patchDeleteGameComment(id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentContainer);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport CommentContainer from '../../containers/CommentContainer';\n// import { fetchGameComments } from '../../actions/comments';\nimport classes from './GamePage.module.css';\n\nclass GamePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n      }\n\n    //   componentDidMount() {\n    //       this.props.fetchGameComments(this.props.location.state.game_id)\n    //   }\n    backButton = (e) => {\n        console.log(e)\n        this.props.history.push('/')\n    }\n    // commentHolder() {\n    //     if (this.props.comments.data.length) {\n    //        return(\n    //        <div>\n    //         <h1>THIS IS A PLACE HOLDER FOR THE COMMENT CONTAINER</h1>\n    //         <ul>\n    //             {this.props.comments.data.map(comment => {\n    //                 console.log(\"IN COMMENT MAP\", comment)\n    //                 return <li>{comment.content}</li>\n    //             })\n    //             }\n    //         </ul>\n    //        </div>)\n    //     } else {\n    //         return (<h1>no</h1>)\n    //     }\n    // }\n    render() {\n        // console.log(\"GAME PAGE\", this.props)\n        const { homeTeam, awayTeam } = this.props.location.state\n        return (\n            <div className={classes.GamePage}>\n                <h1><Link to='/'>Back to games</Link></h1>\n                <button onClick={this.backButton}>backButton</button>\n                <h2>{homeTeam.name} VS {awayTeam.name}</h2>\n                <h1>THIS WILL BE THE GAME PAGE</h1>\n                <CommentContainer game_id={this.props.location.state.game_id}/>\n                {/* {this.commentHolder()} */}\n                \n            </div>\n        )\n    }\n}\n\n// const mapStateToProps = state => {\n//     return {\n//         comments: state.comments\n//     }\n// }\n\n// export default connect(mapStateToProps, { fetchGameComments })(GamePage);\nexport default GamePage;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { postVote } from '../../actions/vote';\nimport { editNumVote, addNumVote } from '../../actions/numVotes';\n\nimport classes from './VoteButton.module.css';\n\nclass VoteButton extends Component {\n\n  handleClick = (gameID, team) => {\n    const votedAlready = this.props.votes.find(vote => vote.game === gameID)\n    const vote = {\n      user: this.props.user.userId,\n      game: gameID,\n      team: team\n    }\n\n    this.props.addVote(vote)\n    \n    if (votedAlready) {\n      this.props.editNum(vote)\n    } else {\n      this.props.addNum(vote)\n    }\n    \n    this.props.voteButtonTeam(team)\n  }\n\n  render() {\n    const { user, gameID, teamID, votedOn } = this.props\n    const style = (!!user.userId && !votedOn) ? '' : classes.ButtonDisabled\n    return( \n    <button className={style} onClick={() => this.handleClick(gameID, teamID)}>Vote</button>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth,\n    votes: state.votes.votes,\n    games: state.games.allGames\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addVote: (vote) => dispatch(postVote(vote)),\n    editNum: (vote) => dispatch(editNumVote(vote)),\n    addNum: (vote) => dispatch(addNumVote(vote))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VoteButton);\n\n\n","import { FETCH_NUM_VOTES_START, FETCH_NUM_VOTES_SUCCESS, FETCH_NUM_VOTES_FAILURE, ADD_NUM_VOTE, EDIT_NUM_VOTE } from './types';\nimport axios from 'axios';\n\nexport const fetchNumVotesStart = () => {\n    return {\n        type: FETCH_NUM_VOTES_START\n    };\n};\n\nexport const fetchNumVotesSuccess = (numVotes) => {\n    return {\n        type: FETCH_NUM_VOTES_SUCCESS, \n        numVotes: numVotes\n    };\n};\n\nexport const fetchNumVotesFailure = (error) => {\n    return {\n        type: FETCH_NUM_VOTES_FAILURE,\n        error: error\n    };\n};\n    \nexport const fetchNumVotes = () => {\n    return dispatch => {\n        dispatch(fetchNumVotesStart());\n        axios.get('http://54.225.49.92/votes/teams/today')\n        .then(resp => {\n            console.log(\"NUM FETCH\", resp)\n            dispatch(fetchNumVotesSuccess(resp.data.num_votes))})\n        .catch(err => dispatch(fetchNumVotesFailure(err)))\n    };\n};\n\nexport const addNumVote = (vote) => {\n    return {\n        type: ADD_NUM_VOTE,\n        vote: vote\n    };\n};\n\nexport const editNumVote = (vote) => {\n    return {\n        type: EDIT_NUM_VOTE,\n        vote: vote\n    };\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport VoteButton from '../Vote/VoteButton';\n\nimport classes from './TeamCard.module.css';\n\nconst TeamCard = props => {\n    let votedOn = false;\n    if (props.vote && props.vote.team === props.team.id) {\n        votedOn = true\n    }\n    // if (props.currentVote && props.currentVote === props.team.id) {\n    //     votedOn = true\n    // }\n    let v = 0; \n    if (props.numVotes) {\n        v = props.numVotes.num_votes\n    }\n\n    return(\n    <div className={classes.TeamCard}>\n        <p className={classes.City}>{props.team.city}</p>\n        <p className={classes.Name}>{props.team.name}</p>\n        <img className={`${votedOn ? '' : classes.BlackAndWhite}`} src={props.team.logo} alt=\"Team Logo\"/>\n        <p>{v}</p>\n        <VoteButton  teamID={props.team.id} gameID={props.gameID}  voteButtonTeam={props.voteButtonTeam} votedOn={votedOn}/>\n    </div>\n)};\n\nTeamCard.propTypes = {\n    gameID: PropTypes.number,\n    team: PropTypes.object\n}\n\nexport default TeamCard;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport TeamCard from '../components/Team/TeamCard';\n\nimport classes from './TeamContainer.module.css';\n\nclass TeamContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentVote: ''\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.vote) {\n            this.setState({\n                 currentVote: this.props.vote.team\n           })\n        }\n    }\n    shouldComponentUpdate(prevProps) {\n        return this.props.votes !== prevProps.votes\n    }\n    \n\n    voteButtonTeam = (id) => {\n        this.setState({\n            currentVote: id\n        })\n    }\n\n\n\n    render() {\n\n        let awayVotes = this.props.numVotes.find(numVote => (numVote.team_id === this.props.awayTeam.id) && (numVote.game_id === this.props.gameID))\n\n        let homeVotes = this.props.numVotes.find(numVote => (numVote.team_id === this.props.homeTeam.id) && (numVote.game_id === this.props.gameID))\n\n        return (\n            <div className={classes.TeamContainer}>\n                <TeamCard team={this.props.awayTeam} \n                    gameID={this.props.gameID} \n                    numVotes={awayVotes}\n                    currentVote={this.state.currentVote}\n                    vote={this.props.vote}\n                    voteButtonTeam={this.voteButtonTeam}\n                    />\n                <TeamCard team={this.props.homeTeam} \n                    gameID={this.props.gameID} \n                    numVotes={homeVotes}\n                    currentVote={this.state.currentVote}\n                    vote={this.props.vote}\n                    voteButtonTeam={this.voteButtonTeam}\n                    />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        votes: state.votes.votes,\n        numVotes: state.numVotes.numVotes\n    }\n}\n\n    export default connect(mapStateToProps)(TeamContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport GamePage from '../../components/Game/GamePage';\n\n\n\nimport TeamContainer from '../../containers/TeamContainer';\n\nimport classes from './GameCard.module.css';\n\nconst GameCard = props => {\n\n    const formatTime = (time) => {\n        let splitTime = time.split(':');\n        let hour = splitTime[0];\n        let dd = 'AM';\n        hour = parseInt(hour, 10)\n        if (hour > 12) {\n            hour = hour - 12;\n            dd = 'PM';\n        }\n        let minute = splitTime[1];\n        let newTime = [hour,minute].join(':') + ` ${dd}`\n\n        return newTime\n    }\n    return (\n    <div className={classes.GameCard}>\n        <TeamContainer homeTeam={props.homeTeam} \n            awayTeam={props.awayTeam} \n            gameID={props.game.id} \n            // gameVote={props.gameVote} \n            // handleVote={props.handleVote} \n            vote={props.vote}\n            user={props.currentUser}/>\n        <p>{props.game.location}</p>\n        <p>{formatTime(props.game.time)}</p>\n        <Link to={{\n            pathname: `/games/${props.game.id}`,\n            state: {\n                homeTeam: props.homeTeam,\n                awayTeam: props.awayTeam,\n                game_id: props.game.id\n            }\n            }}>\n                <button >Check out the matchup</button>\n            </Link>\n    </div>)\n};\n\nGameCard.propTypes = {\n    awayTeam: PropTypes.object,\n    homeTeam: PropTypes.object,\n    game: PropTypes.object,\n    handleVote: PropTypes.func\n}\n\nexport default GameCard;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport GameCard from '../components/Game/GameCard';\nimport { fetchTeams } from '../actions/teams';\nimport { fetchTodaysGames } from '../actions/games';\nimport { fetchVotes } from '../actions/vote';\nimport { fetchNumVotes } from '../actions/numVotes';\n\nimport classes from './GameContainer.module.css';\nimport { Button } from 'antd'\n\nclass GameContainer extends Component {\n    \n    componentDidMount() {\n        console.log(\"DID MOUNT\")\n        this.props.getTeams();\n        this.props.getTodaysGames();\n        this.props.getNumVotes();\n        if (localStorage.getItem('userId')) {\n            this.props.getVotes(localStorage.getItem('userId'))\n        }\n    }\n\n    // componentDidUpdate(prevProps) {\n    //     // console.log(\"DID UPDATE NEW: \", this.props.authUser, \"PREVPROPS: \", prevProps.authUser)\n    //     if (this.props.authUser !== prevProps.authUser) {\n    //         // console.log(\"FETCH VOTES DID UPDATE\")\n    //         this.props.getVotes(this.props.authUser)\n    //     }\n    // }\n\n    render() {\n        console.log(\"GAME CONTAINER\", this.props)\n        const { teams, games, votes, numVotes } = this.props\n        let loggedIn = !!this.props.authUser\n        if (games === null || teams === null) {\n            return null\n        }\n        // if (loggedIn && votes)\n        // {return (\n        //     <div className={classes.GameContainer}>\n        //         {games.map((game) => {\n\n        //             let awayTeam = teams.filter(team => team.id === game.away_team)\n\n        //             let homeTeam = teams.filter(team => team.id === game.home_team)\n\n        //             let gameVote = votes.filter(vote => vote.game === game.id)\n\n        //             return <GameCard key={`game-${game.id}`} game={game} currentUser={this.props.currentUser} awayTeam={awayTeam[0]} homeTeam={homeTeam[0]} gameVote={gameVote[0]} handleVote={this.handleVote} />\n        //         })}\n        //         <Button type=\"primary\">Button</Button>\n        //     </div>\n        // )}\n        return (\n            <div className={classes.GameContainer}>\n                {games.map((game) => {\n\n                    let awayTeam = teams.filter(team => team.id === game.away_team)\n\n                    let homeTeam = teams.filter(team => team.id === game.home_team)\n\n                    let awayVotes = numVotes.find(numVotes => numVotes.team_id === game.away_team)\n\n                    let homeVotes = numVotes.find(numVotes => numVotes.team_id === game.home_team)\n                    \n                    // let vote = votes.filter(vote => game.id === vote.game )\n                    let vote = votes.find(vote => game.id === vote.game)\n                    \n\n\n                    return <GameCard key={`game-${game.id}`} \n                        game={game} \n                        currentUser={this.props.currentUser} \n                        awayTeam={awayTeam[0]} \n                        homeTeam={homeTeam[0]}\n                        awayVotes={awayVotes}\n                        homeVotes={homeVotes}\n                        vote={vote}\n                        // handleVote={this.handleVote} \n                    />\n                })}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        teams: state.teams.teams,\n        votes: state.votes.votes,\n        games: state.games.allGames,\n        authUser: state.auth.userId,\n        numVotes: state.numVotes.numVotes\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getTeams: () => dispatch(fetchTeams()),\n        getTodaysGames: () => dispatch(fetchTodaysGames()),\n        getVotes: (id) => dispatch(fetchVotes(id)),\n        getNumVotes: () => dispatch(fetchNumVotes())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameContainer);\n\n\n// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n\n// import GameCard from '../components/Game/GameCard';\n// import { fetchTeams } from '../actions/teams';\n// import { fetchTodaysGames } from '../actions/games';\n// import { fetchVotes } from '../actions/vote';\n\n// import classes from './GameContainer.module.css';\n// import { Button } from 'antd'\n\n// class GameContainer extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {};\n//     }\n\n//     componentDidMount() {\n//         this.props.fetchTeams()\n//         this.props.fetchTodaysGames()\n//         if (!!this.props.currentUser.id) {\n//             this.props.fetchVotes(this.props.currentUser.id)\n//         }\n//     }\n\n//     render() {\n//         const { teams, games, votes } = this.props\n//         // console.log(\"GAME CONT\", votes)\n//         let loggedIn = !!this.props.currentUser.id\n//         if (games.data === false || teams.data === false) {\n//             return null\n//         }\n//         if (loggedIn)\n//         {return (\n//             <div className={classes.GameContainer}>\n//                 {games.data.map((game) => {\n\n//                     let awayTeam = teams.data.filter(team => team.id === game.away_team)\n\n//                     let homeTeam = teams.data.filter(team => team.id === game.home_team)\n\n//                     let gameVote = votes.data.filter(vote => vote.game === game.id)\n\n//                     return <GameCard key={`game-${game.id}`} game={game} currentUser={this.props.currentUser} awayTeam={awayTeam[0]} homeTeam={homeTeam[0]} gameVote={gameVote[0]} handleVote={this.handleVote} />\n//                 })}\n//                 <Button type=\"primary\">Button</Button>\n//             </div>\n//         )}\n//         return (\n//             <div className={classes.GameContainer}>\n//                 {games.data.map((game) => {\n\n//                     let awayTeam = teams.data.filter(team => team.id === game.away_team)\n\n//                     let homeTeam = teams.data.filter(team => team.id === game.home_team)\n\n\n//                     return <GameCard key={`game-${game.id}`} game={game} currentUser={this.props.currentUser} awayTeam={awayTeam[0]} homeTeam={homeTeam[0]} handleVote={this.handleVote} />\n//                 })}\n//             </div>\n//         )\n//     }\n// }\n\n// const mapStateToProps = state => {\n//     return {\n//         teams: state.teams,\n//         votes: state.votes,\n//         games: state.games\n//     }\n// }\n\n// export default connect(mapStateToProps, { fetchTeams, fetchTodaysGames, fetchVotes })(GameContainer);\n","import { FETCH_TEAMS_START, FETCH_TEAMS_SUCCESS, FETCH_TEAMS_FAILURE } from \"./types\";\nimport axios from 'axios';\n\nexport const fetchTeamsStart = () => {\n    return {\n        type: FETCH_TEAMS_START\n    };\n};\n\nexport const fetchTeamsSuccess = (teams) => {\n    return {\n        type: FETCH_TEAMS_SUCCESS,\n        teams: teams\n    };\n};\n\nexport const fetchTeamsFailure = (error) => {\n    return {\n        type: FETCH_TEAMS_FAILURE,\n        error: error\n    };\n};\n\nexport const fetchTeams = () => {\n    return dispatch => {\n        dispatch(fetchTeamsStart());\n\n        axios.get('http://54.225.49.92/teamz')\n        .then(resp => {\n            console.log(\"FETCH TEAM SUCCESS\", resp)\n            dispatch(fetchTeamsSuccess(resp.data.teams))\n        })\n        .catch(err => {\n            console.log(\"FETCH TEAM\", err)\n            dispatch(fetchTeamsFailure(err))})\n    };\n};\n","import { FETCH_GAMES_START, FETCH_GAMES_SUCCESS, FETCH_GAMES_FAILURE, SELECT_GAME } from \"./types\";\nimport axios from 'axios';\n\nexport const fetchGamesStart = () => {\n    return {\n        type: FETCH_GAMES_START\n    };\n};\n\nexport const fetchGamesSuccess = (games) => {\n    return {\n        type: FETCH_GAMES_SUCCESS,\n        allGames: games\n    };\n};\n\nexport const fetchGamesFailure = (error) => {\n    return {\n        type: FETCH_GAMES_FAILURE,\n        error: error\n    };\n};\n\nexport const selectGame = (id) => {\n    return {\n        type: SELECT_GAME,\n        id: id\n    };\n};\n\nexport const fetchTodaysGames = () => {\n    return dispatch => {\n        dispatch(fetchGamesStart());\n        axios.get('http://54.225.49.92/games/today')\n        .then(resp => {\n            dispatch(fetchGamesSuccess(resp.data.games))\n        })\n        .catch(err => {\n            dispatch(fetchGamesFailure(err.resp.data))\n        })\n    };\n};\n","import axios from 'axios';\nlet token = localStorage.getItem('token')\nlet config = {\n    headers: {'Authorization': \"Bearer \" + token}\n};\n\nexport const register = newUser => {\n    return axios\n    .post('http://54.225.49.92/users', {\n        username: newUser.username,\n        email: newUser.email,\n        password: newUser.password\n    })\n    .then(resp => {\n        localStorage.setItem('token', resp.data.token)\n        return resp.data\n    })\n}\n\nexport const login = user => {\n    return axios\n    .post('http://54.225.49.92/login', {\n        username: user.username,\n        password: user.password\n    })\n    .then(resp => {\n        localStorage.setItem('token', resp.data.token)\n        return resp.data\n    })\n    .catch(err => {\n        console.log(err)\n    })\n}\n\n","import React, { Component } from 'react';\nimport { login } from '../Auth/AuthFunctions';\nimport { connect } from 'react-redux';\nimport { userFetchData, removeUser } from '../../actions/user';\nimport { fetchVotes } from '../../actions/vote';\n\nimport classes from './Register.module.css';\n\n\nclass Login extends Component {\n    constructor(){\n        super()\n        this.state = {\n            username: '',\n            password: ''\n        }\n    }\n    onChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit = e => {\n        e.preventDefault()\n\n        const user = {\n            username: this.state.username,\n            password: this.state.password\n        }\n\n        login(user).then(resp => {\n\n            if(!resp.error) {\n                this.props.userFetchData(resp.token)\n                // this.props.fetchVotes(resp.user.id)\n                this.props.history.push('/')\n            }\n        })\n    }\n\n    addUserAction = (user) => {\n        this.props.addUserAction(user);\n    }\n\n    render() {\n\n        return (\n            <div className={classes.RegisterContainer}>\n                <div className={classes.RegisterForm}>\n                    <form noValidate onSubmit={this.onSubmit}>\n                        <h1 className={classes.Header}>\n                            Please sign in\n                        </h1>\n                        <div>\n                            <input type='text' \n                                name='username'\n                                placeholder='Enter username'\n                                value={this.state.username}\n                                onChange={this.onChange}\n                            />\n                            <label htmlFor='username'>Username</label>\n                        </div>\n                        <div>\n                            <input type='password' \n                                name='password'\n                                placeholder='Enter password'\n                                value={this.state.password}\n                                onChange={this.onChange}\n                            />\n                            <label htmlFor='password'>Password</label>\n                        </div>\n                        <button type='submit'>Submit</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        votes: state.votes\n    }\n}\n\nexport default connect(mapStateToProps, { userFetchData, fetchVotes })(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { register } from '../Auth/AuthFunctions';\nimport { userFetchData, removeUser } from '../../actions/user';\nimport { fetchVotes } from '../../actions/vote';\n\nimport classes from './Register.module.css';\n\nclass Register extends Component {\n    constructor(){\n        super()\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        }\n    }\n    onChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit = e => {\n        e.preventDefault()\n\n        const newUser = {\n            username: this.state.username,\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        register(newUser).then(resp => {\n                this.props.userFetchData(resp.token)\n                // this.props.fetchVotes(resp.user.id)\n                this.props.history.push('/')\n        })\n    }\n\n    render() {\n        return (\n            <div className={classes.RegisterContainer}>\n                <div className={classes.RegisterForm}>\n                    <form noValidate onSubmit={this.onSubmit}>\n                        <h1 className={classes.Header}>\n                            Create Your Pickl Account\n                        </h1>\n                        <div>\n                            <input type='text' \n                                name='username'\n                                placeholder='Username'\n                                value={this.state.username}\n                                onChange={this.onChange}\n                            />\n                            <label htmlFor='username'>Username</label>\n                        </div>\n                        <div>\n                            <input type='email' \n                                name='email'\n                                placeholder='Email'\n                                value={this.state.email}\n                                onChange={this.onChange}\n                            />\n                            <label htmlFor='email'>Email</label>\n                        </div>\n                        <div>\n                            <input type='password' \n                                name='password'\n                                placeholder='Password'\n                                value={this.state.password}\n                                onChange={this.onChange}\n                            />\n                            <label htmlFor='password'>Password</label>\n                        </div>\n                        <div>\n                            <input type='password' \n                                name='confirmPassword'\n                                placeholder='Confirm'\n                                value={this.state.confirmPassword}\n                                onChange={this.onChange}\n                            />\n                            <label htmlFor='confirmPassword'>Confirm</label>\n                        </div>\n                        <button type='submit'>Submit</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        votes: state.votes\n    }\n}\n\n// const mapDispatchToProps = dispatch => ({\n//     addUserAction: (user) => dispatch(addUserAction(user))\n// })\n\nexport default connect(mapStateToProps, { userFetchData, fetchVotes })(Register);\n\n// export default connect()(Register);","import { AUTH_START, AUTH_FAILURE, AUTH_SUCCESS, AUTH_LOGOUT } from './types';\nimport axios from 'axios';\n\nexport const authStart = () => {\n    return {\n        type: AUTH_START\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: AUTH_FAILURE,\n        error: error\n    };\n};\n\nexport const authSuccess = (token, userId, username) => {\n    return {\n        type: AUTH_SUCCESS,\n        token: token,\n        userId: userId,\n        username: username\n    };\n};\n\nexport const login = (username, password) => {\n    return dispatch => {\n        dispatch(authStart()); \n        const loginData = {\n            username: username,\n            password: password\n        };\n        axios.post('http://54.225.49.92/login', loginData)\n        .then(resp => {\n            console.log(\"LOGIN RESPONSE\", resp);\n            localStorage.setItem('token', resp.data.token);\n            localStorage.setItem('userId', resp.data.user.id);\n            localStorage.setItem('username', resp.data.user.username);\n            dispatch(authSuccess(resp.data.token, resp.data.user.id, resp.data.user.username));\n        })\n        .catch(err => {\n            console.log(err);\n            dispatch(authFail(err));\n        })\n    };\n};\n\nexport const register = (username, email, password, confirmPassword) => {\n    return dispatch => {\n        dispatch(authStart());\n        const registerData = {\n            username: username,\n            email: email,\n            password: password,\n            confirmPassword: confirmPassword\n        };\n        axios.post('http://54.225.49.92/users', registerData)\n        .then(resp => {\n                console.log(resp);\n                localStorage.setItem('token', resp.data.token);\n                localStorage.setItem('userId', resp.data.user.id);\n                dispatch(authSuccess(resp.data.token, resp.data.user.id, resp.data.user.username));\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(authFail(err));\n            })\n        };\n    };\n    \nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('username');\n    return {\n        type: AUTH_LOGOUT,\n    };\n};\n    \nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout())\n        } else {\n            const userId = localStorage.getItem('userId');\n            const username = localStorage.getItem('username');\n            dispatch(authSuccess(token, userId, username))\n        }\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { logout } from '../../../actions/auth';\nimport { removeVotes } from '../../../actions/vote';\n\nclass Logout extends Component {\n    componentDidMount() {\n        this.props.removeVotes();\n        this.props.onLogout();\n    }\n    render () {\n        return <Redirect to='/' />\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(logout()),\n        removeVotes: () => dispatch(removeVotes())\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Navbar from './components/Nav/Navbar';\nimport GameContainer from './containers/GameContainer';\nimport Login from './components/forms/Login';\nimport Register from './components/forms/Register';\nimport { userFetchData, removeUser } from './actions/user';\nimport { fetchVotes } from './actions/vote';\nimport GamePage from './components/Game/GamePage';\nimport Logout from './components/Auth/Logout/Logout';\n\n\nclass App extends Component {\n\n    componentDidMount() {\n        const token = localStorage.getItem('token')\n        if (token) {\n            this.props.userFetchData(token)\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.user.id !== prevProps.user.id) {\n            this.props.fetchVotes(this.props.user.id)\n        }\n    }\n\n    render() {\n        // console.log(\"APP\", this.props)\n        return (\n            <div className=\"App\">\n                <Navbar onLogout={this.handleLogout} onLogin={this.handleLogin} />\n                <div>\n                    {/* {\n                            JSON.stringify(this.props)\n                        } */}\n                    <Switch>\n                        <Route path='/login' render={(routeProps) => (<Login {...routeProps} onLogin={this.handleLogin} />)} />\n                        <Route path='/register' render={(routeProps) => (<Register {...routeProps} />)} />\n                        <Route path='/games/:id' render={(routeProps) => (<GamePage {...routeProps} />)} />\n                        <Route path='/' render={(routeProps) => (<GameContainer {...routeProps} currentUser={this.props.user} />)} />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        votes: state.votes\n    }\n}\n\nexport default connect(mapStateToProps, { userFetchData, fetchVotes })(App)","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport classes from './AntNav.module.css';\n\n\n\nconst navItems = (props) => {\n    return (\n        <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={['1']}\n            style={{ lineHeight: '64px' }}\n        >\n            {/* {this.renderLoginLogout()}\n            {this.renderRegister()} */}\n            { props.isAuthenticated \n                ? <Menu.Item key=\"3\"><Link to='/logout'>Logout</Link></Menu.Item>\n                : <Menu.Item key=\"1\"><Link to='/login'>Login</Link></Menu.Item>\n            }\n            { props.isAuthenticated \n                ? null \n                : <Menu.Item key=\"2\"><Link to='/register'>Register</Link></Menu.Item> \n            }\n        </Menu>\n    )\n}\nexport default navItems;\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport { removeUser } from '../../actions/user';\nimport { removeVotes } from '../../actions/vote';\nimport classes from './AntNav.module.css';\nimport NavItems from './NavItems';\n\nconst { Header } = Layout;\nconst antNav = (props) => {\n  return (\n    <Header className={classes.AntNav}>\n      <div className=\"logo\" />\n      {/* <Menu\n        theme=\"dark\"\n        mode=\"horizontal\"\n        defaultSelectedKeys={['1']}\n        style={{ lineHeight: '64px' }}\n      >\n        {this.renderLoginLogout()}\n        {this.renderRegister()}\n        <NavItems />\n      </Menu> */}\n      <NavItems isAuthenticated={props.auth}/>\n    </Header>\n  )\n}\n\nexport default antNav;\n\n// class AntNav extends Component {\n\n//     // handleLogout = () => {\n//     //     this.props.removeUser()\n//     //     this.props.removeVotes()\n//     // }\n\n//     // renderLoginLogout = () => {\n//     //     if (this.props.auth.userId) {\n//     //         return <Menu.Item onClick={this.handleLogout} key=\"3\">Logout</Menu.Item>\n//     //     } else {\n//     //         return (\n//     //                 <Menu.Item key=\"1\"><Link to='/login'>Login</Link></Menu.Item>\n//     //                 )\n//     //     }\n//     // }\n\n//     // renderRegister = () => {\n//     //     return (this.props.auth.userId) ? null : <Menu.Item key=\"2\"><Link to='/register'>Register</Link></Menu.Item>\n//     // }\n\n//    render () {\n//        console.log(\"ANTNAV\", this.props)\n//         return (\n//           <Header className={classes.AntNav}>\n//             <div className=\"logo\" />\n//             {/* <Menu\n//               theme=\"dark\"\n//               mode=\"horizontal\"\n//               defaultSelectedKeys={['1']}\n//               style={{ lineHeight: '64px' }}\n//             >\n//               {this.renderLoginLogout()}\n//               {this.renderRegister()}\n//               <NavItems />\n//             </Menu> */}\n//                           <NavItems auth={this.props.auth}/>\n//           </Header>\n//         )\n//    }\n// }\n\n// // const mapStateToProps = state => {\n// //     return {\n// //         user: state.user,\n// //         votes: state.votes\n// //     }\n// // }\n\n// export default connect(null, { removeUser, removeVotes })(AntNav);","import React from 'react';\n\nimport classes from './Spinner.module.css';\n\nconst spinner = ()=> (\n    <div className={classes.LoaderContainer}>\n        <div className={classes.Loader}>Loading...</div>\n    </div>\n);\n\nexport default spinner;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Spinner from '../UI/Spinner/Spinner';\nimport { login } from '../../actions/auth';\nimport classes from './AuthLogin.module.css';\n\n\nclass AuthLogin extends Component {\n    constructor(){\n        super()\n        this.state = {\n            username: '',\n            password: ''\n        }\n    }\n    onChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        this.props.onLogin(this.state.username, this.state.password)\n    }\n\n    render() {\n\n        let errorMessage = null;\n\n        if (this.props.error) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            )\n        }\n        let authRedirect = null;\n        if (this.props.isAuthenticated) {\n            authRedirect = <Redirect to='/' />\n        }\n        \n        if (this.props.loading) {\n            return(\n                    <Spinner />\n            )\n        } else {\n            return (\n                <div className={classes.AuthLoginContainer}>\n                    {authRedirect}\n                    <div className={classes.AuthLoginForm}>\n                        <form noValidate onSubmit={this.submitHandler}>\n                            <h1 className={classes.Header}>\n                                AuthLogin\n                            </h1>\n                            {errorMessage}\n                            <div>\n                                <input type='text' \n                                    name='username'\n                                    placeholder='Enter username'\n                                    value={this.state.username}\n                                    onChange={this.onChange}\n                                />\n                                <label htmlFor='username'>Username</label>\n                            </div>\n                            <div>\n                                <input type='password' \n                                    name='password'\n                                    placeholder='Enter password'\n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                />\n                                <label htmlFor='password'>Password</label>\n                            </div>\n                            <button type='submit'>Submit</button>\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n        \n    }\n}\n\nconst mapStatetoProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogin: (username, password) => dispatch(login(username, password))\n    };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(AuthLogin);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Spinner from '../UI/Spinner/Spinner';\nimport { register } from '../../actions/auth';\nimport classes from './AuthRegister.module.css';\n\nclass AuthRegister extends Component {\n    constructor(){\n        super()\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        }\n    }\n    onChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault()\n        this.props.onRegister(this.state.username, this.state.email, this.state.password, this.state.confirmPassword)\n    }\n\n    render() {\n\n        let errorMessage = null;\n\n        if (this.props.error) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            )\n        }\n\n        let authRedirect = null;\n        if (this.props.isAuthenticated) {\n            authRedirect = <Redirect to='/' />\n        }\n\n        if (this.props.loading) {\n            return <Spinner />\n        } else {\n            return (\n                <div className={classes.AuthRegisterContainer}>\n                    {authRedirect}\n                    <div className={classes.AuthRegisterForm}>\n                        <form noValidate onSubmit={this.submitHandler}>\n                            <h1 className={classes.Header}>\n                                AuthRegister\n                            </h1>\n                            {errorMessage}\n                            <div>\n                                <input type='text' \n                                    name='username'\n                                    placeholder='Username'\n                                    value={this.state.username}\n                                    onChange={this.onChange}\n                                />\n                                <label htmlFor='username'>Username</label>\n                            </div>\n                            <div>\n                                <input type='email' \n                                    name='email'\n                                    placeholder='Email'\n                                    value={this.state.email}\n                                    onChange={this.onChange}\n                                />\n                                <label htmlFor='email'>Email</label>\n                            </div>\n                            <div>\n                                <input type='password' \n                                    name='password'\n                                    placeholder='Password'\n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                />\n                                <label htmlFor='password'>Password</label>\n                            </div>\n                            <div>\n                                <input type='password' \n                                    name='confirmPassword'\n                                    placeholder='Confirm'\n                                    value={this.state.confirmPassword}\n                                    onChange={this.onChange}\n                                />\n                                <label htmlFor='confirmPassword'>Confirm</label>\n                            </div>\n                            <button type='submit'>Submit</button>\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStatetoProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onRegister: (username, email, password, confirmPassword) => dispatch(register(username, email, password, confirmPassword))\n    };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(AuthRegister);","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Navbar from './components/Nav/Navbar';\nimport GameContainer from './containers/GameContainer';\nimport Login from './components/forms/Login';\nimport Register from './components/forms/Register';\n// import { userFetchData, removeUser } from './actions/user';\n// import { fetchVotes } from './actions/vote';\nimport GamePage from './components/Game/GamePage';\nimport { authCheckState } from './actions/auth';\n\n\nimport AntNav from './components/Nav/AntNav';\nimport AuthLogin from './components/Auth/AuthLogin';\nimport AuthRegister from './components/Auth/AuthRegister';\nimport Logout from './components/Auth/Logout/Logout';\n\n\n\n\nclass App2 extends Component {\n\n    componentDidMount() {\n        // const token = localStorage.getItem('token')\n        // if (token) {\n        //     this.props.userFetchData(token)\n        // }\n        this.props.onTryAutoSignup()\n    }\n\n    componentDidUpdate(prevProps) {\n        // if (this.props.user.id !== prevProps.user.id) {\n        //     this.props.fetchVotes(this.props.user.id)\n        // }\n    }\n\n    render() {\n        // console.log(\"APP\", this.props)\n        return (\n            <div className=\"App\">\n                {/* <Navbar onLogout={this.handleLogout} onLogin={this.handleLogin} /> */}\n                <AntNav auth={this.props.isAuthenticated}/>\n                {/* <AuthRegister /> */}\n                {/* <AuthLogin /> */}\n                <div>\n                    {/* {\n                            JSON.stringify(this.props)\n                        } */}\n                    <Switch>\n                        {/* <Route path='/login' render={(routeProps) => (<Login {...routeProps} onLogin={this.handleLogin} />)} /> */}\n                        <Route path='/login' component={AuthLogin} />\n                        <Route path='/register' component={AuthRegister} />\n                        {/* <Route path='/register' render={(routeProps) => (<Register {...routeProps} />)} /> */}\n                        <Route path='/games/:id' render={(routeProps) => (<GamePage {...routeProps} />)} />\n                        <Route path='/logout' component={Logout} />\n                        {/* <Route path='/' render={(routeProps) => (<GameContainer {...routeProps} currentUser={this.props.authUser} />)} /> */}\n                        <Route path='/' component={GameContainer} />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        // user: state.user,\n        // votes: state.votes,\n        isAuthenticated: state.auth.token !== null,\n        // authUser: state.auth.userId\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onTryAutoSignup: () => dispatch(authCheckState())\n    };\n};\n\n// export default connect(mapStateToProps, { userFetchData, fetchVotes })(App2)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App2);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport { HashRouter as Router} from 'react-router-dom'; \n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport App2 from './App2';\n\nReactDOM.render((\n    <Provider store={configureStore()}>\n        <Router basename={'/react-pickl'}>\n            {/* <App /> */}\n            <App2 />\n        </Router>\n    </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nexport default function configureStore() {\n    return createStore(\n        rootReducer, composeWithDevTools(\n            applyMiddleware(thunk)\n        )\n    );\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterContainer\":\"Register_RegisterContainer__3aqW2\",\"RegisterForm\":\"Register_RegisterForm__3dpI_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Comment\":\"Comment_Comment__PW1S3\",\"commentor\":\"Comment_commentor__24Rfe\",\"content\":\"Comment_content__2iHbi\",\"timestamp\":\"Comment_timestamp__2OI9T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TeamCard\":\"TeamCard_TeamCard__1m33W\",\"BlackAndWhite\":\"TeamCard_BlackAndWhite__3cQ8x\",\"City\":\"TeamCard_City__3RZ6J\",\"Name\":\"TeamCard_Name__1EOf0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthLoginContainer\":\"AuthLogin_AuthLoginContainer__2tRvg\",\"AuthLoginForm\":\"AuthLogin_AuthLoginForm__uhlp-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthRegisterContainer\":\"AuthRegister_AuthRegisterContainer__1ic4q\",\"AuthRegisterForm\":\"AuthRegister_AuthRegisterForm__37_vz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AntNav\":\"AntNav_AntNav__2qiID\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3gICw\",\"logo\":\"Nav_logo__348g8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoaderContainer\":\"Spinner_LoaderContainer__28zXg\",\"Loader\":\"Spinner_Loader__1twK-\",\"load6\":\"Spinner_load6__1_74m\",\"round\":\"Spinner_round__3G_CY\"};"],"sourceRoot":""}